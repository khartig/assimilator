package org.rioproject.gnostic;

import org.rioproject.watch.Calculable;
import org.rioproject.system.measurable.cpu.CalculableCPU;
import org.rioproject.system.measurable.cpu.CalculableProcessCPU;
import org.rioproject.system.measurable.disk.CalculableDiskSpace;
import org.rioproject.system.measurable.memory.CalculableMemory;
import org.rioproject.system.measurable.memory.CalculableSystemMemory;
import java.util.logging.Logger;


declare Calculable
    @role(event)
    @timestamp(date)
end

declare CalculableCPU
    @role(event)
    @timestamp(date)
end

declare CalculableProcessCPU
    @role(event)
    @timestamp(date)
end

declare CalculableDiskSpace
    @role(event)
    @timestamp(date)
end

declare CalculableMemory
    @role(event)
    @timestamp(date)
end

declare CalculableSystemMemory
    @role(event)
    @timestamp(date)
end

rule "if CPU is over 50% over the last minute log as severe in the console"
when
    $cpu : Number(doubleValue > 0.5)
        from accumulate(CalculableCPU($value : value) over window:time(1m)
        from entry-point "calculables-stream", average($value))
then
    Logger.getLogger("org.rioproject.gnostic.Gnostic")
            .severe("\n\n\nCPU is racing (CPU avg is " + $cpu + ")!!!\n\n\n");
end

/*
rule "if answering to hello messages takes on average more than 4 ms over a 30 sec time window log as severe in the console"
when
    $avg : Number(doubleValue > 4.0)
        from accumulate(Calculable(id == "HelloWatch", $value : value) over window:time(30s)
        from entry-point "calculables-stream", average($value))
then
    Logger.getLogger("org.rioproject.gnostic.Gnostic")
            .severe("\n\n\nAnswering to hello messages is taking ages (more than " + $avg + "ms)!!!\n\n\n");
end
*/

/*
rule "if CPU is over 50% over the last minute log as severe in the console"
when
    $cpu : Number(doubleValue > 0.5)
        from accumulate(Calculable(id == "CPU", $value : total) over window:time(1m)
        from entry-point "calculables-stream", average($value))
then
    Logger.getLogger("org.rioproject.gnostic.Gnostic")
            .severe("\n\n\nCPU is racing (CPU avg is " + $cpu + ")!!!\n\n\n");
end
*/

/*
rule "if answering to hello messages takes on average more than 4 ms over a 30 sec time window and CPU is over 50% over the last minute log as severe in the console"
when
    $avg : Number(doubleValue > 4.0)
        from accumulate(Calculable(id == "HelloWatch", $value : value) over window:time(30s)
        from entry-point "calculables-stream", average($value))
    $cpu : Number(doubleValue > 0.5)
        from accumulate(Calculable(id == "CPU", $value : total) over window:time(1m)
        from entry-point "calculables-stream", average($value))
then
    Logger.getLogger("org.rioproject.gnostic.Gnostic")
            .severe("\n\n\nAnswering to hello messages is taking ages and CPU is racing (more than " + $avg + "ms and CPU avg is " + $cpu + ")!!!\n\n\n");
end
*/






/*
rule "show all calculables"
salience -1000
when
    $calculable : Calculable() from entry-point "calculables-stream"
then
    Logger.getLogger("org.rioproject.gnostic.Gnostic").fine("Found calculable: " + $calculable.getId() + " with value " + $calculable.getValue());
end
*/

/*
rule "if answering to hello messages takes more than 5 ms log a warning in the console"
when
    $time : Calculable(id == "HelloWatch", value >= 5) from entry-point "calculables-stream"
then
    Logger.getLogger("org.rioproject.gnostic.Gnostic")
            .warning("Answering to hello messages is taking ages (more than " + $time.getValue() + "ms)!!!");
end
*/

/*
// you can easily generated some load by running "yes > /dev/null"
rule "show high utilization, that is more than 25%, over 30 seconds"
when
    $utilization : CalculableCPU(total > 0.25) over window:time(30s) from entry-point "calculables-stream"
then
    Logger.getLogger("org.rioproject.gnostic.Gnostic").warning("CPU utilization is going crazy: " + $utilization);
end
*/

/*
// you can easily generated some load by running "yes > /dev/null"
rule "react to the average utilization higher than 25% over the last 30 seconds"
when
    Number(doubleValue > 0.25)
        from accumulate(CalculableCPU($total : total) over window:time(30s) from entry-point "calculables-stream", average($total))
then
    Logger.getLogger("org.rioproject.gnostic.Gnostic").warning("CPU utilization is going crazy since 30s!");
end
*/