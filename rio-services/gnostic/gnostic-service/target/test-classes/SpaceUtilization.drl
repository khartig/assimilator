package org.rioproject.gnostic;

import org.rioproject.system.measurable.cpu.CalculableProcessCPU;
import org.rioproject.system.measurable.memory.CalculableMemory;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.System;
import java.util.Date;

global org.rioproject.gnostic.DeployedServiceContext context;

declare CalculableProcessCPU
    @role(event)
    @timestamp(date)
end

declare CalculableMemory
    @role(event)
    @timestamp(date)
end

rule "Space Utilization Rule"
when
     $cpu : Number(doubleValue > 0.01)
              from accumulate(CalculableProcessCPU($value : value) over window:time(1m)
              from entry-point "calculables-stream", average($value))
     $mem : Number(doubleValue > 0.01)
              from accumulate(CalculableMemory($value : value) over window:time(1m)
              from entry-point "calculables-stream", average($value))
then
    String s = new Date(System.currentTimeMillis())+" System is over utilized, cpu: "+$cpu+", memory: "+$mem+"\n";
    File file = new File(System.getProperty("java.io.tmpdir"), "SpaceUtilizationTest.out");
    try {
        BufferedWriter out = new BufferedWriter(new FileWriter(file, true));
        out.write(s);
        out.close();
    } catch (IOException e) {
    }
end